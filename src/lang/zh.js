export default {
  route: {
    dashboard: '首页',
    monitoringcenter: '监控中心',
    LocationDataView: '智能前端',
    DeviceTest: '设备演练',
    DeviceCardDataView: '设备集合列表',
    DeviceDataView: '设备列表',
    AttrDetail: '设备详情',
    RemoteDetail: '历史详情',
    PairManager: '设备对时',
    DataTreeDevice: '设备视图',
    cableCardDetail: '设备总览',
    DataTreeView: '数据视图',
    Circulation: '环流计算',
    Remotevision: '视频管理',
    CurrentVideo: '当前视频',
    MultipleVideo: '视频监控',
    HistoryVideo: '历史视频',
    alertmanager: '告警管理',
    CurrentAlert: '实时报警',
    CurrentAlertDetail: '实时报警详细',
    HistoryAlerts: '历史报警',
    HitoryAlertDetail: '历史报警详细',
    ActionHistory: '动作记录',
    EventRecord: '事件记录',
    LinkageDevice: '联动管理',
    WithDrawDevice: '撤防管理',
    CurrentWithDrawDevice: '实时撤防',
    HistoryWithDrawDevice: '历史撤防',
    AccessRecord: '出入记录',

    Statistics: '统计分析',
    Statisticslist: '消息统计',
    StatisticsDevice: '设备统计',
    StatisticsWarning: '告警统计',
    DeviceRunningStatus: '设备运行状态',
    EnterStatistics: '出入口统计',

    MessageManager: '消息管理',
    ComapanyAddressbook: '企业通讯簿',
    groupdetail: '通讯簿分组详细',
    Sendboxlist: '发件箱',
    inboxlist: '收件箱',
    Smsgrouplist: '短信群发',
    Daytalist: '按日统计',
    Montalist: '按月统计',
    Paragraph: '号段管理',

    ManagementCenter: '管理中心',
    StationVideo: '过程站',
    DeviceTypeAttr: '设备数据',
    Event: '事件管理',
    TunnelRouteManag: '信息管理',
    DeviceRelation: '设备关系',

    SystemManager: '系统管理',
    UserManager: '用户管理',
    Userlist: '用户列表',
    UserDetail: 'Sticky',
    RoleManager: '角色管理',
    Rolelist: '角色列表',
    SystemLog: '系统日志',
    UserLog: '操作日志',
    Company: '公司管理',
    Organization: '组织机构',
    MonitorRange: '监控范围',

    cableManager: '电缆室工作',
    Monitorlist: '手工效对',
    FileManager: '文件管理',
    addmeaure: '添加监测记录',
    InfoManager: '信息管理',
    DeviceInfolist: '设备关系',
    menu1: '菜单1',
    'menu1-1': '菜单 1-1',
    'menu1-2': '菜单 1-2',
    'menu1-2-1': '菜单 1-2-1',
    'menu1-2-2': '菜单 1-2-2',
    'menu1-3': '菜单 1-3',
    menu2: '菜单 2',
    Table: 'Table',
    dynamicTable: '动态 Table',
    dragTable: '拖拽 Table',
    inlineEditTable: 'Table 内编辑',
    complexTable: '综合 Table',
    tab: 'Tab',
    form: '表单',
    createArticle: '创建文章',
    editArticle: '编辑文章',
    articleList: '文章列表',
    errorPages: '错误页面',
    page401: '401',
    page404: '404',
    errorLog: '错误日志',
    excel: 'Excel',
    exportExcel: '导出 Excel',
    selectExcel: '导出 已选择项',
    mergeHeader: '导出 多级表头',
    uploadExcel: '上传 Excel',
    zip: 'Zip',
    pdf: 'PDF',
    exportZip: 'Export Zip',
    theme: '换肤',
    clipboardDemo: 'Clipboard',
    i18n: '国际化',
    externalLink: '外链',
    profile: '个人中心',
    Companydetail: '公司详细',
    usermanagement: '用户管理',
    userdetail: '用户详细',
    RemoteVision: '视频管理',
    CameraControl: '摄像头控制'
  },
  navbar: {
    dashboard: '首页',
    github: '项目地址',
    logOut: '退出登录',
    profile: '个人中心',
    theme: '换肤',
    size: '布局大小'
  },
  login: {
    title: '迪森设备监控系统',
    logIn: '登录',
    username: '账号',
    password: '密码',
    captcha: '验证码',
    any: '随便填',
    thirdparty: '第三方登录',
    thirdpartyTips: '本地不能模拟，请结合自己业务进行模拟！！！'
  },
  documentation: {
    documentation: '文档',
    github: 'Github 地址'
  },
  permission: {
    addRole: '新增角色',
    editPermission: '编辑权限',
    roles: '你的权限',
    switchRoles: '切换权限',
    tips: '在某些情况下，不适合使用 v-permission。例如：Element-UI 的 el-tab 或 el-table-column 以及其它动态渲染 dom 的场景。你只能通过手动设置 v-if 来实现。',
    delete: '删除',
    confirm: '确定',
    cancel: '取消'
  },
  guide: {
    description: '引导页对于一些第一次进入项目的人很有用，你可以简单介绍下项目的功能。本 Demo 是基于',
    button: '打开引导'
  },
  components: {
    documentation: '文档',
    tinymceTips: '富文本是管理后台一个核心的功能，但同时又是一个有很多坑的地方。在选择富文本的过程中我也走了不少的弯路，市面上常见的富文本都基本用过了，最终权衡了一下选择了Tinymce。更详细的富文本比较和介绍见',
    dropzoneTips: '由于我司业务有特殊需求，而且要传七牛 所以没用第三方，选择了自己封装。代码非常的简单，具体代码你可以在这里看到 @/components/Dropzone',
    stickyTips: '当页面滚动到预设的位置会吸附在顶部',
    backToTopTips1: '页面滚动到指定位置会在右下角出现返回顶部按钮',
    backToTopTips2: '可自定义按钮的样式、show/hide、出现的高度、返回的位置 如需文字提示，可在外部使用Element的el-tooltip元素',
    imageUploadTips: '由于我在使用时它只有vue@1版本，而且和mockjs不兼容，所以自己改造了一下，如果大家要使用的话，优先还是使用官方版本。'
  },
  table: {
    dynamicTips1: '固定表头, 按照表头顺序排序',
    dynamicTips2: '不固定表头, 按照点击顺序排序',
    dragTips1: '默认顺序',
    dragTips2: '拖拽后顺序',
    title: '标题',
    importance: '重要性',
    type: '类型',
    remark: '点评',
    search: '搜索',
    add: '添加',
    export: '导出',
    reviewer: '审核人',
    id: '序号',
    date: '时间',
    author: '作者',
    readings: '阅读数',
    status: '状态',
    actions: '操作',
    edit: '编辑',
    publish: '发布',
    draft: '草稿',
    delete: '删除',
    cancel: '取 消',
    confirm: '确 定'
  },
  example: {
    warning: '创建和编辑页面是不能被 keep-alive 缓存的，因为keep-alive 的 include 目前不支持根据路由来缓存，所以目前都是基于 component name 来进行缓存的。如果你想类似的实现缓存效果，可以使用 localStorage 等浏览器缓存方案。或者不要使用 keep-alive 的 include，直接缓存所有页面。详情见'
  },
  errorLog: {
    tips: '请点击右上角bug小图标',
    description: '现在的管理后台基本都是spa的形式了，它增强了用户体验，但同时也会增加页面出问题的可能性，可能一个小小的疏忽就导致整个页面的死锁。好在 Vue 官网提供了一个方法来捕获处理异常，你可以在其中进行错误处理或者异常上报。',
    documentation: '文档介绍'
  },
  excel: {
    export: '导出',
    selectedExport: '导出已选择项',
    placeholder: '请输入文件名(默认excel-list)'
  },
  zip: {
    export: '导出',
    placeholder: '请输入文件名(默认file)'
  },
  pdf: {
    tips: '这里使用   window.print() 来实现下载pdf的功能'
  },
  theme: {
    change: '换肤',
    documentation: '换肤文档',
    tips: 'Tips: 它区别于 navbar 上的 theme-pick, 是两种不同的换肤方法，各自有不同的应用场景，具体请参考文档。'
  },
  tagsView: {
    refresh: '刷新',
    close: '关闭',
    closeOthers: '关闭其它',
    closeAll: '关闭所有'
  },
  settings: {
    title: '系统布局配置',
    theme: '主题色',
    tagsView: '开启 Tags-View',
    fixedHeader: '固定 Header',
    sidebarLogo: '侧边栏 Logo'
  }
}
